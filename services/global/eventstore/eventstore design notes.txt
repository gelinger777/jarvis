// EvenStream object represents one single stream of persisted events
    
    EventStore.getStream(path)

// writing to an event stream

    // single message
    stream.write(byte[])

    // or a batch of messages (methods will be added on demand)
    stream.write(Collection<byte[]>)

// reading from an event stream

    stream.fromStart()
    stream.realtime() 
    stream.from(index)
    stream.fromTo(from, to)

// other 

    // number of persisted events
    stream.length()

    // allocated memory on file system
    stream.size()

    // key value storage for metadata
    stream.metadata() 

    // create TCP endpoint
    stream.exposeTCP()

    // close TCP endpoint
    stream.closeTCP()

    // close and release resources (eligable for garbage collection)
    stream.close()


// Some design notes

    EventStore must be configured for root folder property before any other operation.

    EventStream api will allocate resources on demand, and if possible share them. A single EventStream instance is created per stream, it can be shared and used in concurrent environment.

    It is safe to write from multiple threads in the same jvm process, but its not safe to write in multiple jvm processes.