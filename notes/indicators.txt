// indicators

    indicator.ping {
        Categorises each trade event to positive, negative and neutral by comparing with the previous trade, then provides overal signal about the direction and the move... Uses volume to weigh the value of the signals...
    }

    indicator.change {
        This indicator projects the change over defined amount of time for any numeric source. It can be configured as "last N time" or "each N time"...
    }

    indicator.weightedMarkets {
        This indicator weights specific other indicators value between different markets, for example if we pick EMA as an indicator (which works on one market) then we can use this indicator to aggregate value using same EMA but on many markets (on different exchanges)... So using this you can have EMA of say BTC/USD but aggregated for different exchanges such (2 x EMA[BITSTAMP|BTC|USD] + 2 x EMA[BITFINEX|BTC|USD] + 1 x EMA[BTCE|BTC|USD])/5. In this case we gave 2/5 weight to bitstamp and bitfinex and 1/5 weight to btce... Using ML to tune weights will improve this indicators accuracy (but its questionable how to implement actual supervised learning for this).

        todo : consider detecting correlation between different streams before applying in this indicator, the stream that is influencing all other streams must have higher weight.

        todo : most of the indicators can be developed and tested on simulated data based on hypothesis.
    }

    indicator.pressure {
        Walls are usually indicating the overall direction of the market, if there is a sell wall, usually that means there buyers are under control and vice versa. When trend is reversing, walls are appearing on the opposite side, although the previous wall is still bigger the growth is stopped and the other side is getting more and more volume...
    }

    indicator.diff {
        Projects price difference between two trade streams.
    }

    indicator.mostFrequentMax {
        Calculates most frequent maximum of the chart, recent data has more weight (like EMA).
    }

    indicator.mostFrequentMin {
        Calculates most frequent minimum of the chart, recent data has more weight (like EMA).
    }

    indicator.effort{
        Every trade is an effort moving the price in one of the two directions, this indicator shows how much effort is put for one of the sides... each trade is consuming some amount of volume from one of the sides, this aggregates consumed volume for specified perioud of time, giving slightly more value to the recently consumed..
    }

    indicator.resistance{
        Compares how much volume needs to be consumed for the same price change to be achieved on ask or bid side...
    }

    indicator.langProcess{
        Some financial analytics post analysis results online, publish trough rss, those can either be parsed or entered manually...
    }
    
    indicator.blockchainTracker{
        This indicator is capable to do various different analysis on actual blockchains. For example it can find and track wallets which hold significant amount of cryptocoins and have been idle for years (dead wallets), as soon as some transaction happens from those wallets this indicator shows that... Or tracks wallets with high rate of transactions (most likely exchange wallets), compares volume of incoming and outgoing coins... Many different useful information can be harvested from blockchain, but to test its usefulness hypothesis must be tested with correlation indicator...

        [ requires block stream ]

        todo : bitcoinJ
    }

    indicator.sleepAwake{
        Simply compare prices with a fixed time delay, or fixed trade quantity...

        [ requires trade stream ]
    }

    indicator.forceIndex{
        The FI is calculated by multiplying the difference between the last and previous closing prices by the volume of the commodity, yielding a momentum scaled by the volume.

        [ requires trade stream ]
    }

    indicator.adx{
        https://en.wikipedia.org/wiki/Average_directional_movement_index

        [ requires trade stream ]
    }

    indicator.coincube{
        Use a coincube account behaviour to track decisions that their system is making for its customers, a trading bot can simply replicate the system, but instead can use this information to improve existing strategies...

        [ requires dedicated event stream for account action events ]
    }

    indicator.userOpinion{
        This is a manually entered indicator, based on news and different rumors user may describe overall mood about market (value is in range -1, 1), if an operator has good insight in trading market, then strategies that use supervised learning can give more weight to this indicator over time.

        [ requires a human being aware of the industry news, updates and generally community mood ]
    }

    indicator.whaleDetector{
        Monitors events for huge orders, trades, cancellations. Measures bull and bear powers in realtime.

        [ requires orderbook stream ]
    }
    
    indicator.storm{
        Tracks the market volatility, with this indicator you can tell if market is calm or volatile... Some strategies alike market making ones might do better being idle when its storming out there...

        [ requires trade and orderbook streams ]
    }
    
    indicator.googleTrends{
        Data from google trends correlates with trading volumes. Operator can create many instances of indicator with different keywords, like target currencies used in the market, or industries... then use correlation indicator to test how trend affects actual market...

        [ requires google trends data stream ]

        todo : googleTrends collector
    }
    
    indicator.shazam {
        Shazam uses pattern recognition algorithms for songs, it splits songs to several second long identifiable patterns which are used to determine the song with just fraction of it (even with noise). The same approach might be useful for detecting patterns in charts, as this algorithm is capable to detect entire song with just small portion of sample and ignores the noise...

        [ requires database of predefined patterns ]
    }

    indicator.correlation {
        This indicator can compare two streams for correlation, can be configured for different offsets etc...

        [ requires two comparable streams ]
    }

    indicator.codeForce {
        This indicator tracks git activity of the project, for example one can track bitcoins git repository. This indicator shows how active the repository is...

        [ requires github event stream ]

        todo : githubCollector
    }